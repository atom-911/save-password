{"version":3,"sources":["serviceWorker.js","components/Header.js","components/Search.js","components/DataTableRow.js","components/Datatable.js","components/Insertdata.js","components/EditData.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","react_default","a","createElement","className","Component","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isChange","event","setState","tempValue","target","value","state","_this2","onChange","type","placeholder","onClick","textSearch","statusIns","DataTableRow","btnDelete","deleteItem","btnEdit","editItem","statusEdit","id","account","password","phone","Datatable","dataProp","map","index","components_DataTableRow","key","deleteProp","editProp","uuidv1","require","Insertdata","name","defineProperty","btnInsert","insertedData","alert","getInsData","style","minWidth","EditData","btnSave","editedData","getEditData","btnExit","objAccount","defaultValue","App","getTextSearch","dt","valueSearch","changeStatusCloseEdit","changeStatusOpenEdit","changeStatusCloseIns","changeStatusOpenIns","deleteData","deleteId","deletedData","data","splice","localStorage","setItem","JSON","stringify","editData","forEach","insData","push","showFormEdit","components_EditData","showFormInsert","components_Insertdata","getItem","parse","item","indexOf","components_Header","components_Search","components_Datatable","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d5389df.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            \r\n                <div className=\"jumbotron jumbotron-fluid header\">\r\n                    <div className=\"container text-center\">\r\n                        <h1 className=\"display-3\">Project quản lý mật khẩu cá nhân</h1>               \r\n                        <hr className=\"my-2\"/>                    \r\n                    </div>\r\n                </div>     \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tempValue :\"\"\r\n        }\r\n    }\r\n    isChange = (event) => {\r\n        this.setState({tempValue: event.target.value})\r\n    }\r\n    render() {\r\n        return (                  \r\n                <div className=\"col-12\">\r\n                    <div className=\"form-group\">\r\n                        <div className=\"btn-group search \">\r\n                            <input value = {this.state.tempValue} onChange={this.isChange} type=\"text\" className=\"form-control\" placeholder=\"Nhập giá trị tìm kiếm\" />                   \r\n                        </div>\r\n                        <div className=\"btn btn-info ml-3 search-button \" onClick={()=>this.props.textSearch(this.state.tempValue)}>\r\n                            Tìm kiếm \r\n                        </div>\r\n                        <div className=\"btn btn-info float-right insert-button\" onClick={()=>this.props.statusIns()}>\r\n                            Thêm mới \r\n                        </div>\r\n                    </div>  \r\n                    <hr/> \r\n                </div>                                                                                                      \r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nclass DataTableRow extends Component {\r\n  \r\nbtnDelete = () => {\r\n   this.props.deleteItem()\r\n}\r\nbtnEdit = () => {\r\n    this.props.editItem();\r\n    this.props.statusEdit();\r\n}\r\n    render() {\r\n        return (           \r\n                <tr>\r\n                    <td>{this.props.id+1}</td>\r\n                    <td>{this.props.type}</td>\r\n                    <td>{this.props.account}</td>\r\n                    <td>{this.props.password}</td>\r\n                    <td>{this.props.phone}</td>\r\n                    <td>\r\n                        \r\n                            <div className=\"btn btn-warning sua\" onClick = {()=>this.btnEdit()}><i className=\"fa fa-edit  \" />Sửa</div>\r\n                            <div className=\"btn btn-danger xoa \"onClick = {()=>this.btnDelete()}><i className=\"fa fa-trash  \" />Xóa</div>\r\n                        \r\n                    </td>                   \r\n                </tr>                 \r\n        );\r\n    }\r\n}\r\n\r\nexport default DataTableRow;","import React, { Component } from 'react';\r\nimport DataTableRow from './DataTableRow';\r\n\r\nclass Datatable extends Component {\r\n    render() {\r\n        return ( \r\n                <div className=\"col table-col\">\r\n                    <table className=\"table-data table-striped\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Kiểu tài khoản</th>\r\n                                <th>Tài khoản</th>\r\n                                <th>Mật khẩu</th>\r\n                                <th>Số điện thoại</th>\r\n                                <th>Thao tác</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.props.dataProp.map((value,index)=>(\r\n                                <DataTableRow id={index} key={index} account = {value.account} \r\n                                type = {value.type} password={value.password} phone = {value.phone}\r\n                                deleteItem = {()=>this.props.deleteProp(index)} \r\n                                editItem ={()=>this.props.editProp(value)}\r\n                                statusEdit = {() =>this.props.statusEdit()}/> \r\n                                \r\n                            ))}                                                                                      \r\n                        </tbody>\r\n                    </table>\r\n                </div>                      \r\n            );\r\n        }\r\n    }\r\n\r\nexport default Datatable;","import React, { Component } from 'react';\r\nconst uuidv1 = require('uuid/v1');\r\nclass Insertdata extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            type : '',\r\n            account : '',\r\n            password : '',\r\n            phone : ''\r\n        }\r\n    }\r\n    isChange = (event) => {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    btnInsert=()=>{\r\n        this.props.statusIns(); \r\n        var insertedData = {};\r\n        insertedData.id = uuidv1();\r\n        insertedData.type = this.state.type;\r\n        insertedData.account = this.state.account;\r\n        insertedData.password = this.state.password;\r\n        insertedData.phone = this.state.phone;\r\n        if(insertedData.type === \"\" || insertedData.account === \"\" || insertedData.password === \"\" ||insertedData.phone ===\"\" ){\r\n            alert(\"Mời nhập đầy đủ thông tin!\")\r\n            \r\n        }\r\n        else{\r\n            this.props.getInsData(insertedData);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"insert\">\r\n                <div className=\"card border-primary mb-3\" style={{minWidth: '18rem'}}>\r\n                    <div className=\"card-header\">Thêm mới tài khoản</div>\r\n                        <div className=\"card-body text-primary\">\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.isChange} type=\"text\" name=\"type\" id=\"\" className=\"form-control\" placeholder=\"Kiểu tài khoản\"  />                                   \r\n                            </div>\r\n                            <div className=\"form-group\">                                   \r\n                                <input onChange={this.isChange} type=\"text\" name=\"account\" id=\"\" className=\"form-control\" placeholder=\"Tài khoản\"  />                                   \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.isChange} type=\"text\" name=\"password\" id=\"\" className=\"form-control\" placeholder=\"Mật khẩu\"  />                                     \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input onChange={this.isChange} type=\"text\" name=\"phone\" id=\"\" className=\"form-control\" placeholder=\"Số điện thoại\"  />                                     \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"btn btn-block btn-info\" onClick={()=>this.btnInsert()}>Thêm mới</div> \r\n                                <div className=\"btn btn-block btn-warning\" onClick = {()=>this.props.statusIns()}>Đóng</div>                                 \r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Insertdata;","import React, { Component } from 'react';\r\n\r\nclass EditData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : this.props.objAccount.id,\r\n            type : this.props.objAccount.type,\r\n            account : this.props.objAccount.account,\r\n            password : this.props.objAccount.password,\r\n            phone : this.props.objAccount.phone\r\n        }\r\n    }\r\n    isChange = (event) => {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n    btnSave = () => {\r\n        this.props.statusEdit(); \r\n        var editedData = {};\r\n        editedData.id = this.state.id;\r\n        editedData.type = this.state.type;\r\n        editedData.account = this.state.account;\r\n        editedData.password = this.state.password;\r\n        editedData.phone = this.state.phone;\r\n        if(editedData.type === \"\" || editedData.account === \"\" || editedData.password === \"\" ||editedData.phone ===\"\" ){\r\n            alert(\"Mời nhập đầy đủ thông tin!\")\r\n        }\r\n        else{\r\n            this.props.getEditData(editedData);\r\n        }\r\n    }\r\n    btnExit = () => {\r\n        this.props.statusEdit();\r\n    }\r\n    render() {\r\n        return (\r\n                <div className=\"edit\">\r\n                    <div className=\"card border-primary mb-3\" style={{minWidth: '18rem'}}>\r\n                        <div className=\"card-header\">Sửa thông tin tài khoản</div>\r\n                            <div className=\"card-body text-primary\">\r\n                                <div className=\"form-group\">\r\n                                    <input defaultValue = {this.props.objAccount.type} onChange = {this.isChange}\r\n                                    type=\"text\" name=\"type\" id=\"\" className=\"form-control\" placeholder=\"Kiểu tài khoản\"  />                                   \r\n                                </div>\r\n                                <div className=\"form-group\">                                   \r\n                                    <input defaultValue = {this.props.objAccount.account} onChange = {this.isChange} \r\n                                    type=\"text\" name=\"account\" id=\"\" className=\"form-control\" placeholder=\"Tài khoản\"  />                                   \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input defaultValue = {this.props.objAccount.password}  onChange = {this.isChange}\r\n                                    type=\"text\" name=\"password\" id=\"\" className=\"form-control\" placeholder=\"Mật khẩu\"  />                                     \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input defaultValue = {this.props.objAccount.phone}  onChange = {this.isChange}\r\n                                    type=\"text\" name=\"phone\" id=\"\" className=\"form-control\" placeholder=\"Số điện thoại\"  />                                     \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <div className=\"btn btn-block btn-info\" onClick = {()=>this.btnSave()}>Lưu lại</div>  \r\n                                <div className=\"btn btn-block btn-warning\" onClick = {()=>this.btnExit()} >Đóng</div>                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditData;\r\n\r\n","import '../App.css';\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Search from './Search';\nimport Datatable from './Datatable';\nimport Insertdata from './Insertdata';\nimport EditData from './EditData';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      data : [],\n      valueSearch : \"\",\n      statusEdit : false,\n      statusIns : false,\n      objAccount : {}\n    }\n  }\n  \n  componentDidMount() {\n    if (localStorage.getItem('data') === null)\n    {\n      localStorage.setItem('data',JSON.stringify(this.state.data))\n    }\n    else{    \n      this.setState({\n        data : JSON.parse(localStorage.getItem('data'))\n      })\n    }\n  }\n \n  getTextSearch=(dt)=>{\n    this.setState({\n      valueSearch : dt\n      \n    });\n  }\n  // lấy giá trị cần tìm \n\n  changeStatusCloseEdit = () => {\n    this.setState({\n      statusEdit : false\n  });\n  }\n  changeStatusOpenEdit = () => {\n    this.setState({\n      statusEdit : true,\n      statusIns : false\n  });\n  }\n// trạng thái nút edit \n\n  changeStatusCloseIns = () => {\n    this.setState({\n      statusIns : false\n  });\n  }\n  changeStatusOpenIns = () => {\n    this.setState({\n      statusIns : true,\n      statusEdit : false\n  });\n  }\n// trạng thái núi thêm \n\n  deleteData = (deleteId) => {\n    var deletedData = this.state.data    \n        deletedData.splice(deleteId,1)     \n        this.setState({\n          data : deletedData\n        });  \n    localStorage.setItem('data',JSON.stringify(this.state.data))\n  }\n  // Xóa giá trị được chọn \n\n  editData = (editData) => {\n    this.setState({\n      objAccount : editData\n    });\n  }\n  // Lấy đối tượng cần sửa\n\n  getEditData = (editedData) =>{\n    this.state.data.forEach((value)=>{\n\n      if(value.id === editedData.id){\n        value.type = editedData.type\n        value.account = editedData.account\n        value.password =editedData.password\n        value.phone = editedData.phone\n      }\n    })  \n    localStorage.setItem('data',JSON.stringify(this.state.data))\n  }\n\n  getInsData = (insertedData) =>{\n    var insData = this.state.data\n        insData.push(insertedData)\n        this.setState({\n          data : insData\n        });\n    localStorage.setItem('data',JSON.stringify(this.state.data))\n  }\n\n  showFormEdit = () => {\n    if(this.state.statusEdit === true )\n      {\n        return <EditData statusEdit = {() =>this.changeStatusCloseEdit()}      \n                        objAccount = {this.state.objAccount}\n                        getEditData = {(editedData)=>this.getEditData(editedData)}\n                        />                    \n      }\n    }\n    \n  showFormInsert = () => {\n    if(this.state.statusIns === true )\n      {\n            return <Insertdata statusIns = {() =>this.changeStatusCloseIns()}\n                               getInsData = {(insertedData)=>this.getInsData(insertedData)}\n                              />\n      }\n    }\n  render() {\n      var data = []\n      this.state.data.forEach((item) => \n        {\n          if(item.type.indexOf(this.state.valueSearch) !== -1)\n          {\n            data.push(item)\n          }\n        })\n     \n    return (\n      <div>\n        <Header/>\n        <div className=\"container\">\n          <div className=\"row\">\n            <Search textSearch = {(dt)=>this.getTextSearch(dt)} statusIns = {() =>this.changeStatusOpenIns()}/>\n            <Datatable dataProp = {data} \n            deleteProp = {(deleteId) => this.deleteData(deleteId)}\n            editProp = {(editData) => this.editData(editData)}\n            statusEdit = {() =>this.changeStatusOpenEdit()}\n            />\n            {this.showFormEdit()}\n            {this.showFormInsert()}\n          </div>\n        </div>       \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}